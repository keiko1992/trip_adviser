= include_gon
  
= form_for @article, html: {multipart: true} do |f|
  - if @article.errors.any?
    #error_explanation
      %h2= "#{pluralize(@article.errors.count, "error")} prohibited this article from being saved:"
      %ul
        - @article.errors.full_messages.each do |msg|
          %li= msg

  .row
    .col-md-8
      .field
        = f.label :title
        = f.text_field :title, class: "form-control", required: true
      .field
        = f.label :slug
        .input-group
          %span.input-group-addon= "#{articles_url}"
          = f.text_field :slug, class: "form-control", required: true
      .field
        = f.label :content
        = f.hidden_field :content, html: { id: "content" }
        .editable{"data-field-id" => "content"}= @article.content.html_safe
      .actions
        = f.submit '保存する', class: "btn btn-pc"
        = link_to '戻る', list_articles_path, class: "btn btn-ghost"

    .col-md-4
      .field
        = f.label :place
        = f.text_field :place, class: "form-control", required: true
      .field
        = f.label :tag
        %ul.article-tags
      .field
        = f.label :image
        %br
        .mb-10= f.file_field :image
        - if @article.image.processing?
          .uploading.text-center
            = fa_icon "cloud-upload", text: "ただいま画像アップロード中です"
            .reload-massage （数秒後にリロードすると画像が表示されます）
        - elsif @article.image.present?
          %label アイキャッチ用画像
          .mb-20= image_tag(@article.image.expiring_url(30.seconds, :small))
          %label 記事ページトップ用画像
          .mb-20= image_tag(@article.image.expiring_url(30.seconds, :wide))
          %label サムネイル画像
          .mb-20= image_tag(@article.image.expiring_url(30.seconds, :thumb))
      .field
        = f.label :published_at
        %br
        = f.datetime_select :published_at, {use_month_numbers: true}, {class: "form-control select-form-control"}
      .field
        = f.check_box :published
        = f.label :published, "この記事を公開する"

:javascript
  var editor = new MediumEditor('.editable', {
    autoLink: true,
    anchorPreview: {
      hideDelay: 500,
      previewValueSelector: 'a'
    }
  });
